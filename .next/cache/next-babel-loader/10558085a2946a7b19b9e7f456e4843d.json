{"ast":null,"code":"import { InstallProvider } from \"@slack/oauth\";\nimport { createClient } from \"redis\";\nconst client = createClient(process.env.REDIS_URL || \"\");\nexport const installer = new InstallProvider({\n  clientId: process.env.SLACK_CLIENT_ID || \"\",\n  clientSecret: process.env.SLACK_CLIENT_SECRET || \"\",\n  stateSecret: \"hehe-gravel-lol\",\n  installationStore: {\n    storeInstallation: installation => {\n      return new Promise(function (resolve, _) {\n        client.set(installation.team.id, JSON.stringify(installation), function (err, reply) {\n          console.log(\"Reply is\", reply);\n          console.error(\"Error is\", err);\n        });\n        resolve();\n      });\n    },\n    fetchInstallation: installQuery => {\n      return new Promise(function (resolve, reject) {\n        console.log(\"Client get\", installQuery.teamId);\n        client.get(installQuery.teamId, function (err, reply) {\n          if (reply == null) {\n            return reject();\n          }\n\n          const installation = JSON.parse(reply);\n          return resolve(installation);\n        });\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/slack/installer.ts"],"names":["InstallProvider","createClient","client","process","env","REDIS_URL","installer","clientId","SLACK_CLIENT_ID","clientSecret","SLACK_CLIENT_SECRET","stateSecret","installationStore","storeInstallation","installation","Promise","resolve","_","set","team","id","JSON","stringify","err","reply","console","log","error","fetchInstallation","installQuery","reject","teamId","get","parse"],"mappings":"AAAA,SAASA,eAAT,QAA8C,cAA9C;AACA,SAASC,YAAT,QAA6B,OAA7B;AAEA,MAAMC,MAAM,GAAGD,YAAY,CAACE,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyB,EAA1B,CAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,IAAIN,eAAJ,CAAoB;AAC3CO,EAAAA,QAAQ,EAAEJ,OAAO,CAACC,GAAR,CAAYI,eAAZ,IAA+B,EADE;AAE3CC,EAAAA,YAAY,EAAEN,OAAO,CAACC,GAAR,CAAYM,mBAAZ,IAAmC,EAFN;AAG3CC,EAAAA,WAAW,EAAE,iBAH8B;AAI3CC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,iBAAiB,EAAGC,YAAD,IAAkB;AACnC,aAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,CAAnB,EAAsB;AACvCf,QAAAA,MAAM,CAACgB,GAAP,CACEJ,YAAY,CAACK,IAAb,CAAkBC,EADpB,EAEEC,IAAI,CAACC,SAAL,CAAeR,YAAf,CAFF,EAGE,UAAUS,GAAV,EAAeC,KAAf,EAAsB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACAC,UAAAA,OAAO,CAACE,KAAR,CAAc,UAAd,EAA0BJ,GAA1B;AACD,SANH;AAQAP,QAAAA,OAAO;AACR,OAVM,CAAP;AAWD,KAbgB;AAcjBY,IAAAA,iBAAiB,EAAGC,YAAD,IAAkB;AACnC,aAAO,IAAId,OAAJ,CAAY,UAAUC,OAAV,EAAmBc,MAAnB,EAA2B;AAC5CL,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,YAAY,CAACE,MAAvC;AACA7B,QAAAA,MAAM,CAAC8B,GAAP,CAAWH,YAAY,CAACE,MAAxB,EAAgC,UAAUR,GAAV,EAAeC,KAAf,EAAsB;AACpD,cAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,mBAAOM,MAAM,EAAb;AACD;;AAED,gBAAMhB,YAA0B,GAAGO,IAAI,CAACY,KAAL,CAAWT,KAAX,CAAnC;AACA,iBAAOR,OAAO,CAACF,YAAD,CAAd;AACD,SAPD;AAQD,OAVM,CAAP;AAWD;AA1BgB;AAJwB,CAApB,CAAlB","sourcesContent":["import { InstallProvider, Installation } from \"@slack/oauth\";\nimport { createClient } from \"redis\";\n\nconst client = createClient(process.env.REDIS_URL || \"\");\n\nexport const installer = new InstallProvider({\n  clientId: process.env.SLACK_CLIENT_ID || \"\",\n  clientSecret: process.env.SLACK_CLIENT_SECRET || \"\",\n  stateSecret: \"hehe-gravel-lol\",\n  installationStore: {\n    storeInstallation: (installation) => {\n      return new Promise(function (resolve, _) {\n        client.set(\n          installation.team.id,\n          JSON.stringify(installation),\n          function (err, reply) {\n            console.log(\"Reply is\", reply);\n            console.error(\"Error is\", err);\n          }\n        );\n        resolve();\n      });\n    },\n    fetchInstallation: (installQuery) => {\n      return new Promise(function (resolve, reject) {\n        console.log(\"Client get\", installQuery.teamId);\n        client.get(installQuery.teamId, function (err, reply) {\n          if (reply == null) {\n            return reject();\n          }\n\n          const installation: Installation = JSON.parse(reply);\n          return resolve(installation);\n        });\n      });\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}