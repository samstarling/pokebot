{"ast":null,"code":"import { GEN_ONE_POKEMON, TERRIBLE_POKEMON, pickOne, emojiFor, assignPokemonToUser } from \"../pokemon\";\nexport default {\n  id: \"whos-that-pokemon\",\n  triggerPhrase: \"Who's that Pokémon?\",\n  respond: async (event, client, prisma) => {\n    let pokemon = pickOne(GEN_ONE_POKEMON);\n\n    if (event.user === \"U0118G54YLT\") {\n      pokemon = pickOne(TERRIBLE_POKEMON);\n    }\n\n    assignPokemonToUser(prisma, event.team, event.user, pokemon).then(() => {\n      const message = `:${emojiFor(pokemon)}: It’s ${pokemon.name.english}!`;\n      client.chat.postMessage({\n        channel: event.channel,\n        blocks: [{\n          type: \"section\",\n          text: {\n            type: \"mrkdwn\",\n            text: `<@${event.user}>: It's ${pokemon.name.english}!`\n          },\n          accessory: {\n            type: \"image\",\n            image_url: `https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`,\n            alt_text: pokemon.name.english\n          }\n        }],\n        text: `<@${event.user}>: ${message}`\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/responders/assign.ts"],"names":["GEN_ONE_POKEMON","TERRIBLE_POKEMON","pickOne","emojiFor","assignPokemonToUser","id","triggerPhrase","respond","event","client","prisma","pokemon","user","team","then","message","name","english","chat","postMessage","channel","blocks","type","text","accessory","image_url","alt_text"],"mappings":"AAKA,SACEA,eADF,EAEEC,gBAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,mBALF,QAMO,YANP;AAQA,eAAe;AACbC,EAAAA,EAAE,EAAE,mBADS;AAEbC,EAAAA,aAAa,EAAE,qBAFF;AAGbC,EAAAA,OAAO,EAAE,OACPC,KADO,EAEPC,MAFO,EAGPC,MAHO,KAIJ;AACH,QAAIC,OAAO,GAAGT,OAAO,CAACF,eAAD,CAArB;;AACA,QAAIQ,KAAK,CAACI,IAAN,KAAe,aAAnB,EAAkC;AAChCD,MAAAA,OAAO,GAAGT,OAAO,CAACD,gBAAD,CAAjB;AACD;;AAEDG,IAAAA,mBAAmB,CAACM,MAAD,EAASF,KAAK,CAACK,IAAf,EAAqBL,KAAK,CAACI,IAA3B,EAAiCD,OAAjC,CAAnB,CAA6DG,IAA7D,CAAkE,MAAM;AACtE,YAAMC,OAAO,GAAI,IAAGZ,QAAQ,CAACQ,OAAD,CAAU,UAASA,OAAO,CAACK,IAAR,CAAaC,OAAQ,GAApE;AACAR,MAAAA,MAAM,CAACS,IAAP,CAAYC,WAAZ,CAAwB;AACtBC,QAAAA,OAAO,EAAEZ,KAAK,CAACY,OADO;AAEtBC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE,SADR;AAEEC,UAAAA,IAAI,EAAE;AACJD,YAAAA,IAAI,EAAE,QADF;AAEJC,YAAAA,IAAI,EAAG,KAAIf,KAAK,CAACI,IAAK,WAAUD,OAAO,CAACK,IAAR,CAAaC,OAAQ;AAFjD,WAFR;AAMEO,UAAAA,SAAS,EAAE;AACTF,YAAAA,IAAI,EAAE,OADG;AAETG,YAAAA,SAAS,EAAG,iDAAgDd,OAAO,CAACN,EAAG,MAF9D;AAGTqB,YAAAA,QAAQ,EAAEf,OAAO,CAACK,IAAR,CAAaC;AAHd;AANb,SADM,CAFc;AAgBtBM,QAAAA,IAAI,EAAG,KAAIf,KAAK,CAACI,IAAK,MAAKG,OAAQ;AAhBb,OAAxB;AAkBD,KApBD;AAqBD;AAlCY,CAAf","sourcesContent":["import { WebClient } from \"@slack/web-api\";\nimport { PrismaClient } from \"@prisma/client\";\n\nimport { MentionEvent } from \"../slack\";\nimport { Responder } from \"./\";\nimport {\n  GEN_ONE_POKEMON,\n  TERRIBLE_POKEMON,\n  pickOne,\n  emojiFor,\n  assignPokemonToUser,\n} from \"../pokemon\";\n\nexport default {\n  id: \"whos-that-pokemon\",\n  triggerPhrase: \"Who's that Pokémon?\",\n  respond: async (\n    event: MentionEvent,\n    client: WebClient,\n    prisma: PrismaClient\n  ) => {\n    let pokemon = pickOne(GEN_ONE_POKEMON);\n    if (event.user === \"U0118G54YLT\") {\n      pokemon = pickOne(TERRIBLE_POKEMON);\n    }\n\n    assignPokemonToUser(prisma, event.team, event.user, pokemon).then(() => {\n      const message = `:${emojiFor(pokemon)}: It’s ${pokemon.name.english}!`;\n      client.chat.postMessage({\n        channel: event.channel,\n        blocks: [\n          {\n            type: \"section\",\n            text: {\n              type: \"mrkdwn\",\n              text: `<@${event.user}>: It's ${pokemon.name.english}!`,\n            },\n            accessory: {\n              type: \"image\",\n              image_url: `https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`,\n              alt_text: pokemon.name.english,\n            },\n          },\n        ],\n        text: `<@${event.user}>: ${message}`,\n      });\n    });\n  },\n} as Responder;\n"]},"metadata":{},"sourceType":"module"}