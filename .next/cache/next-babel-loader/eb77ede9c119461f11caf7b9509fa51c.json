{"ast":null,"code":"import { emojiFor, assignRandomPokemon } from \"../pokemon\";\nexport default {\n  id: \"whos-that-pokemon\",\n  triggerPhrase: \"Who's that Pokémon?\",\n  respond: async (event, client, prisma) => {\n    const day = new Date().getDay();\n    let generation = 1;\n\n    if (day === 4) {\n      generation = 2;\n    }\n\n    assignRandomPokemon(prisma, event.team, event.user, generation).then(roll => {\n      let message = `:${emojiFor(roll.Pokemon)}: It’s ${roll.Pokemon.name}!`;\n\n      if (generation === 2) {\n        message = `:${emojiFor(roll.Pokemon)}: Thursday means 2nd gen Pokés for everyone: it’s ${roll.Pokemon.name}!`;\n      }\n\n      client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: ${message}`\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/responders/assign.ts"],"names":["emojiFor","assignRandomPokemon","id","triggerPhrase","respond","event","client","prisma","day","Date","getDay","generation","team","user","then","roll","message","Pokemon","name","chat","postMessage","channel","text"],"mappings":"AAKA,SAASA,QAAT,EAAmBC,mBAAnB,QAA8C,YAA9C;AAEA,eAAe;AACbC,EAAAA,EAAE,EAAE,mBADS;AAEbC,EAAAA,aAAa,EAAE,qBAFF;AAGbC,EAAAA,OAAO,EAAE,OACPC,KADO,EAEPC,MAFO,EAGPC,MAHO,KAIJ;AACH,UAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAZ;AAEA,QAAIC,UAAU,GAAG,CAAjB;;AACA,QAAIH,GAAG,KAAK,CAAZ,EAAe;AACbG,MAAAA,UAAU,GAAG,CAAb;AACD;;AAEDV,IAAAA,mBAAmB,CAACM,MAAD,EAASF,KAAK,CAACO,IAAf,EAAqBP,KAAK,CAACQ,IAA3B,EAAiCF,UAAjC,CAAnB,CAAgEG,IAAhE,CACGC,IAAD,IAAU;AACR,UAAIC,OAAO,GAAI,IAAGhB,QAAQ,CAACe,IAAI,CAACE,OAAN,CAAe,UAASF,IAAI,CAACE,OAAL,CAAaC,IAAK,GAApE;;AACA,UAAIP,UAAU,KAAK,CAAnB,EAAsB;AACpBK,QAAAA,OAAO,GAAI,IAAGhB,QAAQ,CACpBe,IAAI,CAACE,OADe,CAEpB,qDACAF,IAAI,CAACE,OAAL,CAAaC,IACd,GAJD;AAKD;;AAEDZ,MAAAA,MAAM,CAACa,IAAP,CAAYC,WAAZ,CAAwB;AACtBC,QAAAA,OAAO,EAAEhB,KAAK,CAACgB,OADO;AAEtBC,QAAAA,IAAI,EAAG,KAAIjB,KAAK,CAACQ,IAAK,MAAKG,OAAQ;AAFb,OAAxB;AAID,KAfH;AAiBD;AAhCY,CAAf","sourcesContent":["import { WebClient } from \"@slack/web-api\";\nimport { PrismaClient } from \"@prisma/client\";\n\nimport { MentionEvent } from \"../slack\";\nimport { Responder } from \"./\";\nimport { emojiFor, assignRandomPokemon } from \"../pokemon\";\n\nexport default {\n  id: \"whos-that-pokemon\",\n  triggerPhrase: \"Who's that Pokémon?\",\n  respond: async (\n    event: MentionEvent,\n    client: WebClient,\n    prisma: PrismaClient\n  ) => {\n    const day = new Date().getDay();\n\n    let generation = 1;\n    if (day === 4) {\n      generation = 2;\n    }\n\n    assignRandomPokemon(prisma, event.team, event.user, generation).then(\n      (roll) => {\n        let message = `:${emojiFor(roll.Pokemon)}: It’s ${roll.Pokemon.name}!`;\n        if (generation === 2) {\n          message = `:${emojiFor(\n            roll.Pokemon\n          )}: Thursday means 2nd gen Pokés for everyone: it’s ${\n            roll.Pokemon.name\n          }!`;\n        }\n\n        client.chat.postMessage({\n          channel: event.channel,\n          text: `<@${event.user}>: ${message}`,\n        });\n      }\n    );\n  },\n} as Responder;\n"]},"metadata":{},"sourceType":"module"}