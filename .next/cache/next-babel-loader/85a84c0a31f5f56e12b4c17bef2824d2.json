{"ast":null,"code":"import { PrismaClient } from \"@prisma/client\";\nconst prisma = new PrismaClient();\nimport csv from \"csv-parser\";\nimport fs from \"fs\";\nexport default ((req, res) => {\n  const results = [];\n  fs.createReadStream(\"./data/pokemon.csv\").pipe(csv()).on(\"data\", data => results.push(data)).on(\"end\", () => {\n    results.forEach(async row => {\n      console.log(row.name, row.type1);\n      const update = {\n        name: row.name,\n        generation: parseInt(row.generation),\n        number: parseInt(row.pokedex_number),\n        classification: row.classfication,\n        primaryType: row.type1,\n        hp: parseInt(row.hp),\n        attack: parseInt(row.attack),\n        defense: parseInt(row.defense),\n        speed: parseInt(row.speed),\n        specialAttack: parseInt(row.sp_attack),\n        specialDefense: parseInt(row.sp_defense)\n      };\n\n      if (row.type2 !== \"\") {\n        update.secondaryType = row.type2;\n      }\n\n      await prisma.pokemon.upsert({\n        where: {\n          number: parseInt(row.pokedex_number)\n        },\n        create: {\n          name: row.name,\n          generation: parseInt(row.generation),\n          number: parseInt(row.pokedex_number)\n        },\n        update\n      });\n    });\n    res.status(200).json({\n      results: results\n    });\n  });\n});","map":null,"metadata":{},"sourceType":"module"}