{"ast":null,"code":"import { GEN_ONE_POKEMON, pickOne, emojiFor, assignPokemonToUser } from \"../pokemon\";\nexport default {\n  id: \"whos-that-pokemon\",\n  triggerPhrase: \"Who's that Pokémon?\",\n  respond: async (event, client, prisma) => {\n    const pokemon = pickOne(GEN_ONE_POKEMON);\n    assignPokemonToUser(prisma, event.team, event.user, pokemon).then(() => {\n      const message = `:${emojiFor(pokemon)}: It’s ${pokemon.name.english}!`;\n      client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: ${message}`\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/responders/assign.ts"],"names":["GEN_ONE_POKEMON","pickOne","emojiFor","assignPokemonToUser","id","triggerPhrase","respond","event","client","prisma","pokemon","team","user","then","message","name","english","chat","postMessage","channel","text"],"mappings":"AAKA,SACEA,eADF,EAEEC,OAFF,EAGEC,QAHF,EAIEC,mBAJF,QAKO,YALP;AAOA,eAAe;AACbC,EAAAA,EAAE,EAAE,mBADS;AAEbC,EAAAA,aAAa,EAAE,qBAFF;AAGbC,EAAAA,OAAO,EAAE,OACPC,KADO,EAEPC,MAFO,EAGPC,MAHO,KAIJ;AACH,UAAMC,OAAO,GAAGT,OAAO,CAACD,eAAD,CAAvB;AACAG,IAAAA,mBAAmB,CAACM,MAAD,EAASF,KAAK,CAACI,IAAf,EAAqBJ,KAAK,CAACK,IAA3B,EAAiCF,OAAjC,CAAnB,CAA6DG,IAA7D,CAAkE,MAAM;AACtE,YAAMC,OAAO,GAAI,IAAGZ,QAAQ,CAACQ,OAAD,CAAU,UAASA,OAAO,CAACK,IAAR,CAAaC,OAAQ,GAApE;AACAR,MAAAA,MAAM,CAACS,IAAP,CAAYC,WAAZ,CAAwB;AACtBC,QAAAA,OAAO,EAAEZ,KAAK,CAACY,OADO;AAEtBC,QAAAA,IAAI,EAAG,KAAIb,KAAK,CAACK,IAAK,MAAKE,OAAQ;AAFb,OAAxB;AAID,KAND;AAOD;AAhBY,CAAf","sourcesContent":["import { WebClient } from \"@slack/web-api\";\nimport { PrismaClient } from \"@prisma/client\";\n\nimport { MentionEvent } from \"../slack\";\nimport { Responder } from \"./\";\nimport {\n  GEN_ONE_POKEMON,\n  pickOne,\n  emojiFor,\n  assignPokemonToUser,\n} from \"../pokemon\";\n\nexport default {\n  id: \"whos-that-pokemon\",\n  triggerPhrase: \"Who's that Pokémon?\",\n  respond: async (\n    event: MentionEvent,\n    client: WebClient,\n    prisma: PrismaClient\n  ) => {\n    const pokemon = pickOne(GEN_ONE_POKEMON);\n    assignPokemonToUser(prisma, event.team, event.user, pokemon).then(() => {\n      const message = `:${emojiFor(pokemon)}: It’s ${pokemon.name.english}!`;\n      client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: ${message}`,\n      });\n    });\n  },\n} as Responder;\n"]},"metadata":{},"sourceType":"module"}