{"ast":null,"code":"import { emojiFor, imageFor, renderType, statusFor } from \"../pokemon\";\nexport default {\n  id: \"query-stats\",\n  triggerPhrase: \"How's my Pokémon?\",\n  respond: async ({\n    event,\n    client,\n    rollRepo\n  }) => {\n    const rolls = await rollRepo.find({\n      where: {\n        teamId: event.team,\n        userId: event.user\n      },\n      order: {\n        createdAt: \"DESC\"\n      },\n      take: 1,\n      relations: [\"pokemon\"]\n    });\n\n    if (rolls[0] == null) {\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: You don't have one!`\n      });\n      return;\n    }\n\n    const roll = rolls[0];\n    await client.chat.postMessage({\n      channel: event.channel,\n      text: `<@${event.user}>: :${emojiFor(roll.pokemon)}: ${roll.pokemon.name}`,\n      icon_url: `https://gravel-pokebot.herokuapp.com/oak.png`,\n      username: \"Professor Oak\",\n      blocks: [{\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: statusFor(roll.pokemon)\n        },\n        fields: [{\n          type: \"mrkdwn\",\n          text: renderType(roll.pokemon)\n        }, {\n          type: \"mrkdwn\",\n          text: `*HP*: ${roll.pokemon.hp}`\n        }, {\n          type: \"mrkdwn\",\n          text: `*Attack*: ${roll.pokemon.attack}`\n        }, {\n          type: \"mrkdwn\",\n          text: `*Defense*: ${roll.pokemon.defense}`\n        }, {\n          type: \"mrkdwn\",\n          text: `*Speed*: ${roll.pokemon.speed}`\n        }, {\n          type: \"mrkdwn\",\n          text: `*Sp. Attack*: ${roll.pokemon.specialAttack}`\n        }, {\n          type: \"mrkdwn\",\n          text: `*Sp. Defense*: ${roll.pokemon.specialDefense}`\n        }],\n        accessory: {\n          type: \"image\",\n          image_url: imageFor(roll.pokemon),\n          alt_text: roll.pokemon.name\n        }\n      }]\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/responders/stats.ts"],"names":["emojiFor","imageFor","renderType","statusFor","id","triggerPhrase","respond","event","client","rollRepo","rolls","find","where","teamId","team","userId","user","order","createdAt","take","relations","chat","postMessage","channel","text","roll","pokemon","name","icon_url","username","blocks","type","fields","hp","attack","defense","speed","specialAttack","specialDefense","accessory","image_url","alt_text"],"mappings":"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","sourcesContent":["import { Responder, RespondParams } from \"./\";\nimport { emojiFor, imageFor, renderType, statusFor } from \"../pokemon\";\n\nexport default {\n  id: \"query-stats\",\n  triggerPhrase: \"How's my Pokémon?\",\n  respond: async ({ event, client, rollRepo }: RespondParams) => {\n    const rolls = await rollRepo.find({\n      where: { teamId: event.team, userId: event.user },\n      order: { createdAt: \"DESC\" },\n      take: 1,\n      relations: [\"pokemon\"],\n    });\n\n    if (rolls[0] == null) {\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: You don't have one!`,\n      });\n      return;\n    }\n\n    const roll = rolls[0];\n\n    await client.chat.postMessage({\n      channel: event.channel,\n      text: `<@${event.user}>: :${emojiFor(roll.pokemon)}: ${\n        roll.pokemon.name\n      }`,\n      icon_url: `https://gravel-pokebot.herokuapp.com/oak.png`,\n      username: \"Professor Oak\",\n      blocks: [\n        {\n          type: \"section\",\n          text: {\n            type: \"mrkdwn\",\n            text: statusFor(roll.pokemon),\n          },\n          fields: [\n            {\n              type: \"mrkdwn\",\n              text: renderType(roll.pokemon),\n            },\n            {\n              type: \"mrkdwn\",\n              text: `*HP*: ${roll.pokemon.hp}`,\n            },\n            {\n              type: \"mrkdwn\",\n              text: `*Attack*: ${roll.pokemon.attack}`,\n            },\n            {\n              type: \"mrkdwn\",\n              text: `*Defense*: ${roll.pokemon.defense}`,\n            },\n            {\n              type: \"mrkdwn\",\n              text: `*Speed*: ${roll.pokemon.speed}`,\n            },\n            {\n              type: \"mrkdwn\",\n              text: `*Sp. Attack*: ${roll.pokemon.specialAttack}`,\n            },\n            {\n              type: \"mrkdwn\",\n              text: `*Sp. Defense*: ${roll.pokemon.specialDefense}`,\n            },\n          ],\n          accessory: {\n            type: \"image\",\n            image_url: imageFor(roll.pokemon),\n            alt_text: roll.pokemon.name,\n          },\n        },\n      ],\n    });\n  },\n} as Responder;\n"]},"metadata":{},"sourceType":"module"}