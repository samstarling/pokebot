{"ast":null,"code":"import { emojiFor, currentPokemonForUser } from \"../pokemon\";\nexport default {\n  id: \"query-latest-pokemon\",\n  triggerPhrase: \"Who's my Pokémon?\",\n  respond: async ({\n    event,\n    client,\n    rollRepo\n  }) => {\n    currentPokemonForUser(rollRepo, event.team, event.user).then(poke => {\n      let message = `You've not rolled a Pokémon yet`;\n\n      if (poke) {\n        message = `Your last roll was :${emojiFor(poke)}: ${poke.name}`;\n      }\n\n      client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: ${message}`\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/responders/latest.ts"],"names":["emojiFor","currentPokemonForUser","id","triggerPhrase","respond","event","client","rollRepo","team","user","then","poke","message","name","chat","postMessage","channel","text"],"mappings":"AACA,SAASA,QAAT,EAAmBC,qBAAnB,QAAgD,YAAhD;AAEA,eAAe;AACbC,EAAAA,EAAE,EAAE,sBADS;AAEbC,EAAAA,aAAa,EAAE,mBAFF;AAGbC,EAAAA,OAAO,EAAE,OAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAAP,KAAsD;AAC7DN,IAAAA,qBAAqB,CAACM,QAAD,EAAWF,KAAK,CAACG,IAAjB,EAAuBH,KAAK,CAACI,IAA7B,CAArB,CAAwDC,IAAxD,CAA8DC,IAAD,IAAU;AACrE,UAAIC,OAAO,GAAI,iCAAf;;AACA,UAAID,IAAJ,EAAU;AACRC,QAAAA,OAAO,GAAI,uBAAsBZ,QAAQ,CAACW,IAAD,CAAO,KAAIA,IAAI,CAACE,IAAK,EAA9D;AACD;;AAEDP,MAAAA,MAAM,CAACQ,IAAP,CAAYC,WAAZ,CAAwB;AACtBC,QAAAA,OAAO,EAAEX,KAAK,CAACW,OADO;AAEtBC,QAAAA,IAAI,EAAG,KAAIZ,KAAK,CAACI,IAAK,MAAKG,OAAQ;AAFb,OAAxB;AAID,KAVD;AAWD;AAfY,CAAf","sourcesContent":["import { Responder, RespondParams } from \"./\";\nimport { emojiFor, currentPokemonForUser } from \"../pokemon\";\n\nexport default {\n  id: \"query-latest-pokemon\",\n  triggerPhrase: \"Who's my Pokémon?\",\n  respond: async ({ event, client, rollRepo }: RespondParams) => {\n    currentPokemonForUser(rollRepo, event.team, event.user).then((poke) => {\n      let message = `You've not rolled a Pokémon yet`;\n      if (poke) {\n        message = `Your last roll was :${emojiFor(poke)}: ${poke.name}`;\n      }\n\n      client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: ${message}`,\n      });\n    });\n  },\n} as Responder;\n"]},"metadata":{},"sourceType":"module"}