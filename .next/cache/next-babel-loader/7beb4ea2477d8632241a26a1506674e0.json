{"ast":null,"code":"import { PrismaClient } from \"@prisma/client\";\nconst prisma = new PrismaClient();\nimport csv from \"csv-parser\";\nimport fs from \"fs\";\nexport default ((req, res) => {\n  const results = [];\n  fs.createReadStream(\"./data/pokemon.csv\").pipe(csv()).on(\"data\", data => results.push(data)).on(\"end\", () => {\n    results.forEach(async row => {\n      await prisma.pokemon.upsert({\n        where: {\n          number: parseInt(row.pokedex_number)\n        },\n        create: {\n          name: row.name,\n          generation: parseInt(row.generation),\n          number: parseInt(row.pokedex_number)\n        },\n        update: {\n          name: row.name,\n          generation: parseInt(row.generation),\n          number: parseInt(row.pokedex_number)\n        }\n      });\n    });\n    res.status(200).json({\n      results: results\n    });\n  });\n});","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/pages/api/import.ts"],"names":["PrismaClient","prisma","csv","fs","req","res","results","createReadStream","pipe","on","data","push","forEach","row","pokemon","upsert","where","number","parseInt","pokedex_number","create","name","generation","update","status","json"],"mappings":"AAAA,SAASA,YAAT,QAAsC,gBAAtC;AAEA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;AAEA,OAAOE,GAAP,MAAgB,YAAhB;AACA,OAAOC,EAAP,MAAmC,IAAnC;AAIA,gBAAe,CAACC,GAAD,EAAsBC,GAAtB,KAA+C;AAC5D,QAAMC,OAIJ,GAAG,EAJL;AAMAH,EAAAA,EAAE,CAACI,gBAAH,CAAoB,oBAApB,EACGC,IADH,CACQN,GAAG,EADX,EAEGO,EAFH,CAEM,MAFN,EAEeC,IAAD,IAAUJ,OAAO,CAACK,IAAR,CAAaD,IAAb,CAFxB,EAGGD,EAHH,CAGM,KAHN,EAGa,MAAM;AACfH,IAAAA,OAAO,CAACM,OAAR,CAAgB,MAAOC,GAAP,IAAe;AAC7B,YAAMZ,MAAM,CAACa,OAAP,CAAeC,MAAf,CAAsB;AAC1BC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAEC,QAAQ,CAACL,GAAG,CAACM,cAAL;AAAlB,SADmB;AAE1BC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAER,GAAG,CAACQ,IADJ;AAENC,UAAAA,UAAU,EAAEJ,QAAQ,CAACL,GAAG,CAACS,UAAL,CAFd;AAGNL,UAAAA,MAAM,EAAEC,QAAQ,CAACL,GAAG,CAACM,cAAL;AAHV,SAFkB;AAO1BI,QAAAA,MAAM,EAAE;AACNF,UAAAA,IAAI,EAAER,GAAG,CAACQ,IADJ;AAENC,UAAAA,UAAU,EAAEJ,QAAQ,CAACL,GAAG,CAACS,UAAL,CAFd;AAGNL,UAAAA,MAAM,EAAEC,QAAQ,CAACL,GAAG,CAACM,cAAL;AAHV;AAPkB,OAAtB,CAAN;AAaD,KAdD;AAgBAd,IAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEnB,MAAAA,OAAO,EAAEA;AAAX,KAArB;AACD,GArBH;AAsBD,CA7BD","sourcesContent":["import { PrismaClient, Pokemon } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nimport csv from \"csv-parser\";\nimport fs, { appendFileSync } from \"fs\";\n\nimport type { NextApiRequest, NextApiResponse } from \"next\";\n\nexport default (req: NextApiRequest, res: NextApiResponse) => {\n  const results: Array<{\n    name: string;\n    pokedex_number: string;\n    generation: string;\n  }> = [];\n\n  fs.createReadStream(\"./data/pokemon.csv\")\n    .pipe(csv())\n    .on(\"data\", (data) => results.push(data))\n    .on(\"end\", () => {\n      results.forEach(async (row) => {\n        await prisma.pokemon.upsert({\n          where: { number: parseInt(row.pokedex_number) },\n          create: {\n            name: row.name,\n            generation: parseInt(row.generation),\n            number: parseInt(row.pokedex_number),\n          },\n          update: {\n            name: row.name,\n            generation: parseInt(row.generation),\n            number: parseInt(row.pokedex_number),\n          },\n        });\n      });\n\n      res.status(200).json({ results: results });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}