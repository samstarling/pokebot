{"ast":null,"code":"import { emojiFor, currentPokemonForUser } from \"../pokemon\";\nexport default {\n  id: \"query-latest-pokemon\",\n  triggerPhrase: \"Who's my Pokémon?\",\n  respond: async (event, client, prisma) => {\n    currentPokemonForUser(prisma, event.team, event.user).then(poke => {\n      let message = `<@${event.user}>: You've not rolled a Pokémon yet`;\n\n      if (poke) {\n        message = `<@${event.user}>: Your last roll was :${emojiFor(poke)}: ${poke.name.english}`;\n      }\n\n      client.chat.postMessage({\n        channel: event.channel,\n        text: message\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/responders/latest.ts"],"names":["emojiFor","currentPokemonForUser","id","triggerPhrase","respond","event","client","prisma","team","user","then","poke","message","name","english","chat","postMessage","channel","text"],"mappings":"AAKA,SAASA,QAAT,EAAmBC,qBAAnB,QAAgD,YAAhD;AAEA,eAAe;AACbC,EAAAA,EAAE,EAAE,sBADS;AAEbC,EAAAA,aAAa,EAAE,mBAFF;AAGbC,EAAAA,OAAO,EAAE,OACPC,KADO,EAEPC,MAFO,EAGPC,MAHO,KAIJ;AACHN,IAAAA,qBAAqB,CAACM,MAAD,EAASF,KAAK,CAACG,IAAf,EAAqBH,KAAK,CAACI,IAA3B,CAArB,CAAsDC,IAAtD,CAA4DC,IAAD,IAAU;AACnE,UAAIC,OAAO,GAAI,KAAIP,KAAK,CAACI,IAAK,oCAA9B;;AACA,UAAIE,IAAJ,EAAU;AACRC,QAAAA,OAAO,GAAI,KAAIP,KAAK,CAACI,IAAK,0BAAyBT,QAAQ,CAACW,IAAD,CAAO,KAChEA,IAAI,CAACE,IAAL,CAAUC,OACX,EAFD;AAGD;;AAEDR,MAAAA,MAAM,CAACS,IAAP,CAAYC,WAAZ,CAAwB;AACtBC,QAAAA,OAAO,EAAEZ,KAAK,CAACY,OADO;AAEtBC,QAAAA,IAAI,EAAEN;AAFgB,OAAxB;AAID,KAZD;AAaD;AArBY,CAAf","sourcesContent":["import { WebClient } from \"@slack/web-api\";\nimport { PrismaClient } from \"@prisma/client\";\n\nimport { MentionEvent } from \"../slack\";\nimport { Responder } from \"./\";\nimport { emojiFor, currentPokemonForUser } from \"../pokemon\";\n\nexport default {\n  id: \"query-latest-pokemon\",\n  triggerPhrase: \"Who's my Pokémon?\",\n  respond: async (\n    event: MentionEvent,\n    client: WebClient,\n    prisma: PrismaClient\n  ) => {\n    currentPokemonForUser(prisma, event.team, event.user).then((poke) => {\n      let message = `<@${event.user}>: You've not rolled a Pokémon yet`;\n      if (poke) {\n        message = `<@${event.user}>: Your last roll was :${emojiFor(poke)}: ${\n          poke.name.english\n        }`;\n      }\n\n      client.chat.postMessage({\n        channel: event.channel,\n        text: message,\n      });\n    });\n  },\n} as Responder;\n"]},"metadata":{},"sourceType":"module"}