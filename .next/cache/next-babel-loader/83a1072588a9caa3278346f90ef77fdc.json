{"ast":null,"code":"import { GEN_ONE_POKEMON, pickOne, emojiFor } from \"../pokemon\";\nexport default {\n  id: \"reroll\",\n  triggerPhrase: \"Reroll\",\n  respond: async (event, client) => {\n    if (new Date().getDay() == 5) {\n      var result = pickOne(GEN_ONE_POKEMON);\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: :${emojiFor(result)}: It’s ${result.name.english}!`\n      });\n    } else {\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}> Sorry, only on a Friday`\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/responders/reroll.ts"],"names":["GEN_ONE_POKEMON","pickOne","emojiFor","id","triggerPhrase","respond","event","client","Date","getDay","result","chat","postMessage","channel","text","user","name","english"],"mappings":"AAEA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,QAAnC,QAAmD,YAAnD;AAGA,eAAe;AACbC,EAAAA,EAAE,EAAE,QADS;AAEbC,EAAAA,aAAa,EAAE,QAFF;AAGbC,EAAAA,OAAO,EAAE,OAAOC,KAAP,EAA4BC,MAA5B,KAAkD;AACzD,QAAI,IAAIC,IAAJ,GAAWC,MAAX,MAAuB,CAA3B,EAA8B;AAC5B,UAAIC,MAAM,GAAGT,OAAO,CAACD,eAAD,CAApB;AACA,YAAMO,MAAM,CAACI,IAAP,CAAYC,WAAZ,CAAwB;AAC5BC,QAAAA,OAAO,EAAEP,KAAK,CAACO,OADa;AAE5BC,QAAAA,IAAI,EAAG,KAAIR,KAAK,CAACS,IAAK,OAAMb,QAAQ,CAACQ,MAAD,CAAS,UAC3CA,MAAM,CAACM,IAAP,CAAYC,OACb;AAJ2B,OAAxB,CAAN;AAMD,KARD,MAQO;AACL,YAAMV,MAAM,CAACI,IAAP,CAAYC,WAAZ,CAAwB;AAC5BC,QAAAA,OAAO,EAAEP,KAAK,CAACO,OADa;AAE5BC,QAAAA,IAAI,EAAG,KAAIR,KAAK,CAACS,IAAK;AAFM,OAAxB,CAAN;AAID;AACF;AAlBY,CAAf","sourcesContent":["import { WebClient } from \"@slack/web-api\";\nimport { MentionEvent } from \"../slack\";\nimport { GEN_ONE_POKEMON, pickOne, emojiFor } from \"../pokemon\";\nimport { Responder } from \"./\";\n\nexport default {\n  id: \"reroll\",\n  triggerPhrase: \"Reroll\",\n  respond: async (event: MentionEvent, client: WebClient) => {\n    if (new Date().getDay() == 5) {\n      var result = pickOne(GEN_ONE_POKEMON);\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: :${emojiFor(result)}: It’s ${\n          result.name.english\n        }!`,\n      });\n    } else {\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}> Sorry, only on a Friday`,\n      });\n    }\n  },\n} as Responder;\n"]},"metadata":{},"sourceType":"module"}