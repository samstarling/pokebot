{"ast":null,"code":"import { createEventAdapter } from \"@slack/events-api\";\nimport { WebClient } from \"@slack/web-api\";\nimport { PrismaClient } from \"@prisma/client\";\nimport { installer } from \"../../lib/slack/installer\";\nimport { RESPONDERS } from \"../../lib/responders\";\nconst prisma = new PrismaClient();\nconst slackEvents = createEventAdapter(process.env.SLACK_SIGNING_SECRET || \"\");\nslackEvents.on(\"app_mention\", async event => {\n  const installData = await installer.authorize({\n    teamId: event.team\n  });\n  const web = new WebClient(installData.botToken);\n  RESPONDERS.forEach(async r => {\n    const sanitizedText = event.text.toLowerCase().replace(\"â€™\", \"'\");\n\n    if (sanitizedText.includes(r.triggerPhrase.toLowerCase())) {\n      r.respond(event, web, prisma);\n    }\n  });\n});\nexport default slackEvents.requestListener();\nexport const config = {\n  api: {\n    bodyParser: false,\n    externalResolver: true\n  }\n};","map":null,"metadata":{},"sourceType":"module"}