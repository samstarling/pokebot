{"ast":null,"code":"import { GEN_ONE_POKEMON, emojiFor, currentPokemonForUser } from \"../pokemon\";\nexport default {\n  id: \"query-latest-pokemon\",\n  triggerPhrase: \"Who's my Pokémon?\",\n  respond: async (event, client, prisma) => {\n    const pokemon = await currentPokemonForUser(prisma, event.team, event.user);\n\n    if (rolls[0] == null) {\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: You don't have one!`\n      });\n      return;\n    }\n\n    const roll = rolls[0];\n    const result = GEN_ONE_POKEMON[roll.pokemonNumber - 1];\n    await client.chat.postMessage({\n      channel: event.channel,\n      text: `<@${event.user}>: Your last roll was :${emojiFor(result)}: ${result.name.english}`\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/responders/latest.ts"],"names":["GEN_ONE_POKEMON","emojiFor","currentPokemonForUser","id","triggerPhrase","respond","event","client","prisma","pokemon","team","user","rolls","chat","postMessage","channel","text","roll","result","pokemonNumber","name","english"],"mappings":"AAKA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,qBAApC,QAAiE,YAAjE;AAEA,eAAe;AACbC,EAAAA,EAAE,EAAE,sBADS;AAEbC,EAAAA,aAAa,EAAE,mBAFF;AAGbC,EAAAA,OAAO,EAAE,OACPC,KADO,EAEPC,MAFO,EAGPC,MAHO,KAIJ;AACH,UAAMC,OAAO,GAAG,MAAMP,qBAAqB,CAACM,MAAD,EAASF,KAAK,CAACI,IAAf,EAAqBJ,KAAK,CAACK,IAA3B,CAA3C;;AAEA,QAAIC,KAAK,CAAC,CAAD,CAAL,IAAY,IAAhB,EAAsB;AACpB,YAAML,MAAM,CAACM,IAAP,CAAYC,WAAZ,CAAwB;AAC5BC,QAAAA,OAAO,EAAET,KAAK,CAACS,OADa;AAE5BC,QAAAA,IAAI,EAAG,KAAIV,KAAK,CAACK,IAAK;AAFM,OAAxB,CAAN;AAIA;AACD;;AAED,UAAMM,IAAI,GAAGL,KAAK,CAAC,CAAD,CAAlB;AACA,UAAMM,MAAM,GAAGlB,eAAe,CAACiB,IAAI,CAACE,aAAL,GAAqB,CAAtB,CAA9B;AACA,UAAMZ,MAAM,CAACM,IAAP,CAAYC,WAAZ,CAAwB;AAC5BC,MAAAA,OAAO,EAAET,KAAK,CAACS,OADa;AAE5BC,MAAAA,IAAI,EAAG,KAAIV,KAAK,CAACK,IAAK,0BAAyBV,QAAQ,CAACiB,MAAD,CAAS,KAC9DA,MAAM,CAACE,IAAP,CAAYC,OACb;AAJ2B,KAAxB,CAAN;AAMD;AA1BY,CAAf","sourcesContent":["import { WebClient } from \"@slack/web-api\";\nimport { PrismaClient } from \"@prisma/client\";\n\nimport { MentionEvent } from \"../slack\";\nimport { Responder } from \"./\";\nimport { GEN_ONE_POKEMON, emojiFor, currentPokemonForUser } from \"../pokemon\";\n\nexport default {\n  id: \"query-latest-pokemon\",\n  triggerPhrase: \"Who's my Pokémon?\",\n  respond: async (\n    event: MentionEvent,\n    client: WebClient,\n    prisma: PrismaClient\n  ) => {\n    const pokemon = await currentPokemonForUser(prisma, event.team, event.user);\n\n    if (rolls[0] == null) {\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: You don't have one!`,\n      });\n      return;\n    }\n\n    const roll = rolls[0];\n    const result = GEN_ONE_POKEMON[roll.pokemonNumber - 1];\n    await client.chat.postMessage({\n      channel: event.channel,\n      text: `<@${event.user}>: Your last roll was :${emojiFor(result)}: ${\n        result.name.english\n      }`,\n    });\n  },\n} as Responder;\n"]},"metadata":{},"sourceType":"module"}