{"ast":null,"code":"import { GEN_ONE_POKEMON, emojiFor } from \"../pokemon\";\nexport default {\n  id: \"query-stats\",\n  triggerPhrase: \"How's my Pokémon?\",\n  respond: async (event, client, prisma) => {\n    const rolls = await prisma.roll.findMany({\n      where: {\n        teamId: event.team,\n        userId: event.user\n      },\n      orderBy: {\n        createdAt: \"desc\"\n      },\n      take: 1\n    });\n\n    if (rolls[0] == null) {\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: You don't have one!`\n      });\n      return;\n    }\n\n    const roll = rolls[0];\n    const result = GEN_ONE_POKEMON[roll.pokemonNumber - 1];\n    const emoji = emojiFor(result);\n    await client.chat.postMessage({\n      channel: event.channel,\n      text: [`<@${event.user}>: :${emoji}: ${result.name.english}`, `*HP:* ${result.base.HP}`, `*Attack:* ${result.base.Attack}`, `*Defense:* ${result.base.Defense}`].join(\"\\n\")\n    });\n  }\n};","map":{"version":3,"sources":["/Users/samstarling/Development/personal/pokebot/lib/responders/stats.ts"],"names":["GEN_ONE_POKEMON","emojiFor","id","triggerPhrase","respond","event","client","prisma","rolls","roll","findMany","where","teamId","team","userId","user","orderBy","createdAt","take","chat","postMessage","channel","text","result","pokemonNumber","emoji","name","english","base","HP","Attack","Defense","join"],"mappings":"AAKA,SAASA,eAAT,EAA0BC,QAA1B,QAA0C,YAA1C;AAEA,eAAe;AACbC,EAAAA,EAAE,EAAE,aADS;AAEbC,EAAAA,aAAa,EAAE,mBAFF;AAGbC,EAAAA,OAAO,EAAE,OACPC,KADO,EAEPC,MAFO,EAGPC,MAHO,KAIJ;AACH,UAAMC,KAAK,GAAG,MAAMD,MAAM,CAACE,IAAP,CAAYC,QAAZ,CAAqB;AACvCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAEP,KAAK,CAACQ,IAAhB;AAAsBC,QAAAA,MAAM,EAAET,KAAK,CAACU;AAApC,OADgC;AAEvCC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAF8B;AAGvCC,MAAAA,IAAI,EAAE;AAHiC,KAArB,CAApB;;AAMA,QAAIV,KAAK,CAAC,CAAD,CAAL,IAAY,IAAhB,EAAsB;AACpB,YAAMF,MAAM,CAACa,IAAP,CAAYC,WAAZ,CAAwB;AAC5BC,QAAAA,OAAO,EAAEhB,KAAK,CAACgB,OADa;AAE5BC,QAAAA,IAAI,EAAG,KAAIjB,KAAK,CAACU,IAAK;AAFM,OAAxB,CAAN;AAIA;AACD;;AAED,UAAMN,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAlB;AACA,UAAMe,MAAM,GAAGvB,eAAe,CAACS,IAAI,CAACe,aAAL,GAAqB,CAAtB,CAA9B;AACA,UAAMC,KAAK,GAAGxB,QAAQ,CAACsB,MAAD,CAAtB;AACA,UAAMjB,MAAM,CAACa,IAAP,CAAYC,WAAZ,CAAwB;AAC5BC,MAAAA,OAAO,EAAEhB,KAAK,CAACgB,OADa;AAE5BC,MAAAA,IAAI,EAAE,CACH,KAAIjB,KAAK,CAACU,IAAK,OAAMU,KAAM,KAAIF,MAAM,CAACG,IAAP,CAAYC,OAAQ,EADhD,EAEH,SAAQJ,MAAM,CAACK,IAAP,CAAYC,EAAG,EAFpB,EAGH,aAAYN,MAAM,CAACK,IAAP,CAAYE,MAAO,EAH5B,EAIH,cAAaP,MAAM,CAACK,IAAP,CAAYG,OAAQ,EAJ9B,EAKJC,IALI,CAKC,IALD;AAFsB,KAAxB,CAAN;AASD;AAlCY,CAAf","sourcesContent":["import { WebClient } from \"@slack/web-api\";\nimport { PrismaClient } from \"@prisma/client\";\n\nimport { MentionEvent } from \"../slack\";\nimport { Responder } from \"./\";\nimport { GEN_ONE_POKEMON, emojiFor } from \"../pokemon\";\n\nexport default {\n  id: \"query-stats\",\n  triggerPhrase: \"How's my Pokémon?\",\n  respond: async (\n    event: MentionEvent,\n    client: WebClient,\n    prisma: PrismaClient\n  ) => {\n    const rolls = await prisma.roll.findMany({\n      where: { teamId: event.team, userId: event.user },\n      orderBy: { createdAt: \"desc\" },\n      take: 1,\n    });\n\n    if (rolls[0] == null) {\n      await client.chat.postMessage({\n        channel: event.channel,\n        text: `<@${event.user}>: You don't have one!`,\n      });\n      return;\n    }\n\n    const roll = rolls[0];\n    const result = GEN_ONE_POKEMON[roll.pokemonNumber - 1];\n    const emoji = emojiFor(result);\n    await client.chat.postMessage({\n      channel: event.channel,\n      text: [\n        `<@${event.user}>: :${emoji}: ${result.name.english}`,\n        `*HP:* ${result.base.HP}`,\n        `*Attack:* ${result.base.Attack}`,\n        `*Defense:* ${result.base.Defense}`,\n      ].join(\"\\n\"),\n    });\n  },\n} as Responder;\n"]},"metadata":{},"sourceType":"module"}